{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vikas\\\\Desktop\\\\memories\\\\TodoList\\\\src\\\\component\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  const [line, setLine] = useState(false);\n\n  const cut = () => {\n    setLine(true);\n  };\n\n  const [item, setItem] = useState(\"\");\n  const [newItem, setNewItem] = useState([]);\n\n  const itemList = () => {\n    if (!item) {} else {\n      setNewItem([...newItem, item]);\n      setItem(\"\");\n    }\n  }; // const deleteItem = (id) =>{\n  //     setNewItem((preValue) =>{\n  //         return preValue.filter((arr, index) =>{\n  //             return index !== id;\n  //         })\n  //     })\n  // };\n\n\n  const removeAll = () => {\n    setNewItem([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" TodoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add an Item\",\n          onChange: e => setItem(e.target.value),\n          value: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add Items\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn\",\n            onClick: itemList,\n            children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: newItem.map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo_style\",\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Cancel Item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: cut,\n                  children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n                    className: \"deleteIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete Item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => {\n                    props.onSelect(props.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    className: \"deleteIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  textDecoration: line ? \"line-through\" : \"null\"\n                },\n                children: val\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Remove all Items\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn1\",\n            onClick: removeAll,\n            children: [\" \", /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoList, \"WVwo1TsPyd0zvqam3tUNlvQUUHQ=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/vikas/Desktop/memories/TodoList/src/component/TodoList.jsx"],"names":["React","useState","DeleteIcon","Tooltip","CancelIcon","Button","AddIcon","TodoList","props","line","setLine","cut","item","setItem","newItem","setNewItem","itemList","removeAll","e","target","value","map","val","index","onSelect","id","textDecoration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAA/B;;AACA,QAAMU,GAAG,GAAE,MAAM;AACbD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACnB,QAAG,CAACJ,IAAJ,EAAS,CAER,CAFD,MAEK;AACDG,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaF,IAAb,CAAD,CAAV;AACJC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACC;AACJ,GAPD,CAVwB,CAmBxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMI,SAAS,GAAE,MAAK;AAClBF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAFD;;AAGA,sBAAO;AAAA,2BAEC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,aAA/B;AAA6C,UAAA,QAAQ,EAAGG,CAAD,IAAML,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAApE;AAAsF,UAAA,KAAK,EAAER;AAA7F;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,WAAf;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAEI,QAApC;AAAA,yCAA+C,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA,oBAEKF,OAAO,CAACO,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzB,gCAAO;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACC,QAAC,OAAD;AAAS,gBAAA,KAAK,EAAC,aAAf;AAAA,uCACA;AAAM,kBAAA,OAAO,EAAEZ,GAAf;AAAA,yCACA,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADD,eAMC,QAAC,OAAD;AAAS,gBAAA,KAAK,EAAC,aAAf;AAAA,uCACA;AAAM,kBAAA,OAAO,EAAE,MAAI;AACfH,oBAAAA,KAAK,CAACgB,QAAN,CAAehB,KAAK,CAACiB,EAArB;AACH,mBAFD;AAAA,yCAGA,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAND,eAaC;AAAI,gBAAA,KAAK,EAAE;AAACC,kBAAAA,cAAc,EAAEjB,IAAI,GAAG,cAAH,GAAoB;AAAzC,iBAAX;AAAA,0BAA8Da;AAA9D;AAAA;AAAA;AAAA;AAAA,sBAbD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAeH,WAhBA;AAFL;AAAA;AAAA;AAAA;AAAA,gBATJ,eA6BI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,kBAAf;AAAA,iCACA,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,OAAO,EAAEL,SAArC;AAAA,yCAAiD,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAgCI;AAAA;AAAA;AAAA;AAAA,gBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFD,mBAAP;AAwCH,CAtED;;GAAMV,Q;;KAAAA,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nconst TodoList = (props) => {\r\n\r\n    const[line, setLine] = useState(false);\r\n    const cut =() => {\r\n        setLine(true);\r\n    };\r\n\r\n    const [item, setItem] = useState(\"\");\r\n    const[newItem, setNewItem] = useState([]);\r\n\r\n    const itemList = () => {\r\n        if(!item){\r\n\r\n        }else{\r\n            setNewItem([...newItem, item]);\r\n        setItem(\"\"); \r\n        }\r\n    };  \r\n\r\n    // const deleteItem = (id) =>{\r\n    //     setNewItem((preValue) =>{\r\n    //         return preValue.filter((arr, index) =>{\r\n    //             return index !== id;\r\n    //         })\r\n    //     })\r\n    // };\r\n\r\n    const removeAll =() =>{\r\n        setNewItem([]);\r\n    }\r\n    return(<>\r\n\r\n            <div className=\"main_div\">\r\n                <div className=\"center_div\">\r\n                    <br/>\r\n                    <h1> TodoList</h1>\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Add an Item\" onChange={(e)=> setItem(e.target.value)} value={item}/>\r\n                    <Tooltip title=\"Add Items\">\r\n                    <Button className=\"newBtn\" onClick={itemList}> <AddIcon/></Button>\r\n                    </Tooltip>\r\n                    <br/>\r\n                    <ol>\r\n                        \r\n                        {newItem.map((val, index) => {\r\n                            return <div className=\"todo_style\">\r\n                                    <Tooltip title=\"Cancel Item\">\r\n                                    <span onClick={cut}> \r\n                                    <CancelIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Delete Item\">\r\n                                    <span onClick={()=>{\r\n                                        props.onSelect(props.id);\r\n                                    }}> \r\n                                    <DeleteIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <li style={{textDecoration: line ? \"line-through\" : \"null\"}}>{val}</li>\r\n                                    </div>\r\n                        })}\r\n                    </ol>\r\n                    <Tooltip title=\"Remove all Items\">\r\n                    <Button className=\"newBtn1\" onClick={removeAll}> <DeleteIcon/></Button>\r\n                    </Tooltip>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}