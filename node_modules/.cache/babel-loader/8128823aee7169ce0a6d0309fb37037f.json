{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vikas\\\\Desktop\\\\react.js\\\\TodoList\\\\src\\\\component\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem('list');\n  console.log(list);\n\n  if (list) {\n    return JSON.parse(localStorage.getItem('list'));\n  } else {\n    return [];\n  }\n};\n\nconst TodoList = () => {\n  _s();\n\n  const [item, setItem] = useState(\"\");\n  const [newItem, setNewItem] = useState(getLocalItems());\n  const [toggle, setToggle] = useState(true);\n  const [toggleEdit, setToggleEdit] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n\n  const itemList = () => {\n    if (!item) {\n      alert(`please fill the input field.`);\n    } else if (item && !toggle) {\n      setNewItem(newItem.map(val => {\n        if (val.id === toggleEdit) {\n          return { ...val,\n            name: item\n          };\n        }\n\n        return val;\n      }));\n      setToggle(true);\n      setItem('');\n      setToggleEdit(null);\n      setShowResults(true);\n    } else {\n      const allItem = {\n        id: new Date().getTime().toString(),\n        name: item\n      };\n      setNewItem([...newItem, allItem]);\n      setItem(\"\");\n      setShowResults(true);\n    }\n  };\n\n  const deleteItem = index => {\n    const updatedItem = newItem.filter(val => {\n      return index !== val.id;\n    });\n    setNewItem(updatedItem);\n  };\n\n  const removeAll = () => {\n    setNewItem([]);\n  };\n\n  const editItem = id => {\n    let newEditItem = newItem.find(val => {\n      return val.id === id;\n    });\n    setToggle(false);\n    setItem(newEditItem.name);\n    setToggleEdit(id);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(newItem));\n  }, [newItem]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" TodoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add an Item\",\n          onChange: e => setItem(e.target.value),\n          value: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add Items\",\n          children: toggle ? /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn\",\n            onClick: itemList,\n            children: [\" \", /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 81\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn\",\n            onClick: itemList,\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            \"paddingLeft\": \"0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              \"color\": \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), newItem.map((val, id) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo_style\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Edit Item\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => editItem(val.id),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                      className: \"deleteIcon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Delete Item\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => deleteItem(val.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      className: \"deleteIcon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: val.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this)]\n              }, val.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), showResults ? /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Remove all Items\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn1\",\n            onClick: removeAll,\n            children: [\" \", /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 34\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoList, \"ViQXCM43COgttewGyifJyi5HPAA=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/vikas/Desktop/react.js/TodoList/src/component/TodoList.jsx"],"names":["React","useState","useEffect","DeleteIcon","Tooltip","Button","AddIcon","EditIcon","getLocalItems","list","localStorage","getItem","console","log","JSON","parse","TodoList","item","setItem","newItem","setNewItem","toggle","setToggle","toggleEdit","setToggleEdit","showResults","setShowResults","itemList","alert","map","val","id","name","allItem","Date","getTime","toString","deleteItem","index","updatedItem","filter","removeAll","editItem","newEditItem","find","stringify","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst getLocalItems = () =>{\r\n    let list = localStorage.getItem('list');\r\n    console.log(list);\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem('list'));\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\n\r\nconst TodoList = () => {\r\n\r\n    const [item, setItem] = useState(\"\");\r\n    const[newItem, setNewItem] = useState(getLocalItems());\r\n    const[toggle, setToggle] = useState(true);\r\n    const[toggleEdit, setToggleEdit] = useState(null);\r\n    const [showResults, setShowResults] = useState(false);\r\n\r\n    const itemList = () => {\r\n        if(!item){\r\n            alert(`please fill the input field.`);\r\n        }else if(item && !toggle){\r\n            setNewItem(\r\n                newItem.map((val) =>{\r\n                    if(val.id === toggleEdit){\r\n                        return {...val, name:item}\r\n                    }\r\n                    return val;\r\n                })\r\n            )\r\n            setToggle(true);\r\n            setItem('');\r\n            setToggleEdit(null);\r\n            setShowResults(true);\r\n        }else{\r\n            const allItem = {id: new Date().getTime().toString(), name:item}\r\n            setNewItem([...newItem, allItem]);\r\n            setItem(\"\"); \r\n            setShowResults(true);\r\n        }\r\n    };  \r\n\r\n    const deleteItem = (index) =>{\r\n        const updatedItem = newItem.filter((val) =>{\r\n            return index !== val.id;\r\n        })\r\n        setNewItem(updatedItem);\r\n    };\r\n\r\n    const removeAll =() =>{\r\n        setNewItem([]);\r\n    }\r\n\r\n    const editItem = (id) =>{\r\n        let newEditItem = newItem.find((val) =>{\r\n            return val.id === id;\r\n        });\r\n        setToggle(false);\r\n        setItem(newEditItem.name);\r\n        setToggleEdit(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n       localStorage.setItem('list', JSON.stringify(newItem));\r\n    }, [newItem]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"main_div\">\r\n                <div className=\"center_div\">\r\n                    <br/>\r\n                    <h1> TodoList</h1>\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Add an Item\" onChange={(e)=> setItem(e.target.value)} value={item}/>\r\n                    <Tooltip title=\"Add Items\">\r\n                    \r\n                     {\r\n                         toggle ?<Button className=\"newBtn\" onClick={itemList}> <AddIcon/></Button>\r\n                          : <Button className=\"newBtn\" onClick={itemList}><EditIcon/></Button>\r\n                     } \r\n                    \r\n                    </Tooltip>\r\n                    <br/>\r\n                    <ol style={{\"paddingLeft\":\"0\"}}>\r\n                    <hr style={{\"color\":\"black\"}}/>\r\n                        {newItem.map((val, id) => {\r\n                            return (\r\n                                <>\r\n                                <div className=\"todo_style\" key={val.id}>\r\n                                    <Tooltip title=\"Edit Item\">\r\n                                    <span onClick={() => editItem(val.id)}> \r\n                                    <EditIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Delete Item\">\r\n                                    <span onClick={() => deleteItem(val.id)}> \r\n                                    <DeleteIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <li>{val.name}</li>\r\n                                </div>\r\n                                <hr/>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </ol>\r\n                   { showResults?<Tooltip title=\"Remove all Items\">\r\n                    <Button className=\"newBtn1\" onClick={removeAll}> <DeleteIcon/></Button>\r\n                    </Tooltip>: null}\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}