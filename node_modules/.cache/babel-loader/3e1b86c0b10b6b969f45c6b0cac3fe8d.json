{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vikas\\\\Desktop\\\\memories\\\\TodoList\\\\src\\\\component\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  const [item, setItem] = useState(\"\");\n  const [newItem, setNewItem] = useState([]);\n  const [toggle, setToggle] = useState(true);\n\n  const itemList = () => {\n    if (!item) {} else {\n      const allItem = {\n        id: new Date().getTime().toString(),\n        name: item\n      };\n      setNewItem([...newItem, allItem]);\n      setItem(\"\");\n    }\n  };\n\n  const deleteItem = index => {\n    const updatedItem = newItem.filter(val => {\n      return index !== val.id;\n    });\n    setNewItem(updatedItem);\n  };\n\n  const [line, setLine] = useState(false);\n\n  const cut = () => {\n    setLine(true);\n  };\n\n  const removeAll = () => {\n    setNewItem([]);\n  };\n\n  const editItem = id => {\n    let newEditItem = newItem.find(val => {\n      return val.id === id;\n    });\n    setToggle(false);\n    setItem(newEditItem.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" TodoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add an Item\",\n          onChange: e => setItem(e.target.value),\n          value: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add Items\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn\",\n            onClick: itemList,\n            children: toggle ? /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: newItem.map((val, id) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo_style\",\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Cancel Item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: cut,\n                  children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n                    className: \"deleteIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Edit Item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => editItem(val.id),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                    className: \"deleteIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete Item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => deleteItem(val.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    className: \"deleteIcon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  textDecoration: line ? \"line-through\" : \"null\"\n                },\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Remove all Items\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"newBtn1\",\n            onClick: removeAll,\n            children: [\" \", /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoList, \"1L9VikuMTaHCoo+bfJGiyn043xM=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/vikas/Desktop/memories/TodoList/src/component/TodoList.jsx"],"names":["React","useState","DeleteIcon","Tooltip","CancelIcon","Button","AddIcon","EditIcon","TodoList","props","item","setItem","newItem","setNewItem","toggle","setToggle","itemList","allItem","id","Date","getTime","toString","name","deleteItem","index","updatedItem","filter","val","line","setLine","cut","removeAll","editItem","newEditItem","find","e","target","value","map","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst TodoList = (props) => {\r\n\r\n    const [item, setItem] = useState(\"\");\r\n    const[newItem, setNewItem] = useState([]);\r\n    const[toggle, setToggle] = useState(true);\r\n\r\n    const itemList = () => {\r\n        if(!item){\r\n\r\n        }else{\r\n            const allItem = {id: new Date().getTime().toString(), name:item}\r\n            setNewItem([...newItem, allItem]);\r\n            setItem(\"\"); \r\n        }\r\n    };  \r\n\r\n    const deleteItem = (index) =>{\r\n        const updatedItem = newItem.filter((val) =>{\r\n            return index !== val.id;\r\n        })\r\n        setNewItem(updatedItem);\r\n    };\r\n\r\n    const[line, setLine] = useState(false);\r\n    const cut =() => {\r\n        setLine(true);\r\n    };\r\n\r\n    const removeAll =() =>{\r\n        setNewItem([]);\r\n    }\r\n\r\n    const editItem = (id) =>{\r\n        let newEditItem = newItem.find((val) =>{\r\n            return val.id === id;\r\n        });\r\n        setToggle(false);\r\n        setItem(newEditItem.name);\r\n    }\r\n\r\n    return(<>\r\n\r\n            <div className=\"main_div\">\r\n                <div className=\"center_div\">\r\n                    <br/>\r\n                    <h1> TodoList</h1>\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Add an Item\" onChange={(e)=> setItem(e.target.value)} value={item}/>\r\n                    <Tooltip title=\"Add Items\">\r\n                    <Button className=\"newBtn\" onClick={itemList}>\r\n                     {\r\n                         toggle ? <AddIcon/> : <EditIcon/>\r\n                     } \r\n                    </Button>\r\n                    </Tooltip>\r\n                    <br/>\r\n                    <ol>\r\n                        \r\n                        {newItem.map((val, id) => {\r\n                            return <div className=\"todo_style\" key={val.id}>\r\n                                    <Tooltip title=\"Cancel Item\">\r\n                                    <span onClick={cut}> \r\n                                    <CancelIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Edit Item\">\r\n                                    <span onClick={() => editItem(val.id)}> \r\n                                    <EditIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Delete Item\">\r\n                                    <span onClick={() => deleteItem(val.id)}> \r\n                                    <DeleteIcon className=\"deleteIcon\"/>\r\n                                    </span>\r\n                                    </Tooltip>\r\n                                    <li style={{textDecoration: line ? \"line-through\" : \"null\"}}>{val.name}</li>\r\n                                    </div>\r\n                        })}\r\n                    </ol>\r\n                    <Tooltip title=\"Remove all Items\">\r\n                    <Button className=\"newBtn1\" onClick={removeAll}> <DeleteIcon/></Button>\r\n                    </Tooltip>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}